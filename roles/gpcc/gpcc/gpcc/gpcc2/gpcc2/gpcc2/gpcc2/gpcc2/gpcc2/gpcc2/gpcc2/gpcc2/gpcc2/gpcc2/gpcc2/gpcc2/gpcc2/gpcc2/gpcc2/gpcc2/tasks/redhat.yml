---

# Install Greenplum Command Center v2 on Red Hat / CentOS

- name: Get the specific ip address
  set_fact:
    prod_ip_addr_range: "{{ item }}"
  when: "item | ipaddr('{{ gpcc2_network_range }}')"
  with_items: "{{ ansible_all_ipv4_addresses }}"

- name: Check if the Greenplum Database software is already installed
  stat: path=/usr/local/greenplum-db
  register: gpdb_installed

- name: Stop if database software is not installed
  fail: msg="Greenplum Database software is not installed!"
  when: gpdb_installed.stat.exists != True

- name: Verify that database is up and running
  become_user: gpadmin
  changed_when: False
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && psql -c "SELECT VERSION()" )
  register: select_version
  failed_when: "'(Greenplum Database ' not in select_version.stdout"

# Status: Command Center software is installed
- name: Set default values for run mode variables
  set_fact:
    gpcc2_gpperfmon_install: False
    gpcc2_setup_cc_sne: False

- name: Verify that gpperfmon is not installed (1)
  become_user: gpadmin
  changed_when: False
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && psql -c "SELECT COUNT(*) AS count FROM pg_database WHERE datname = 'gpperfmon'" )
  register: select_gpperfmon

- name: Add login to pg_hba.conf
  lineinfile:
    dest: /data/master/gpseg-1/pg_hba.conf
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
    - { line: "local    gpperfmon   gpmon                           md5" , state: present }
    - { line: "host     all         gpmon         127.0.0.1/28      md5" , state: present }
    - { line: "host     all         gpmon         ::1/128           md5" , state: present }
    - { line: "host     all         gpmon         {{ prod_ip_addr_range }}/24 md5" , state: present }
  register: gpmon_pg_hba_config
  when: select_gpperfmon.stdout.find('     0') != -1

- name: Reload database
  become_user: gpadmin
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && gpstop -u )
  async: 120
  poll: 5
  changed_when: gpmon_pg_hba_config == True

# - meta: end_play

- name: Verify that gpperfmon is not installed (1)
  set_fact:
    gpcc2_gpperfmon_install: True
  when: select_gpperfmon.stdout.find('     0') != -1

- name: Install gpperfmon agents
  become_user: gpadmin
  changed_when: False
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && gpperfmon_install --enable --password '{{ gpcc2_password }}' --port 5432 )
  when: gpcc2_gpperfmon_install == True

- name: Check if the Command Center version is already installed
  stat: path=/usr/local/greenplum-cc-web-{{ gpcc2_major_version }}.{{ gpcc2_minor_version }}
  register: gpcc2_installed

- name: Copy Command Center zip file
  copy: src=greenplum-cc-web-{{ gpcc2_major_version }}.{{ gpcc2_minor_version }}-LINUX-x86_64.zip dest=/home/gpadmin/gpcc2.zip mode=0644 owner=gpadmin group=gpadmin
  when: gpcc2_installed.stat.exists != True

- name: Remove old temp installer directory
  file: path=/home/gpadmin/gpcc2-tmp-install state=absent
  changed_when: False
  when: gpcc2_installed.stat.exists != True

- name: Create new temp installer directory
  file: path=/home/gpadmin/gpcc2-tmp-install state=directory owner=gpadmin group=gpadmin
  changed_when: False
  when: gpcc2_installed.stat.exists != True

- name: Unzip Command Center archive
  unarchive: src=/home/gpadmin/gpcc2.zip dest=/home/gpadmin/gpcc2-tmp-install remote_src=yes owner=gpadmin group=gpadmin
  when: gpcc2_installed.stat.exists != True

# make next tasks easier by not always using the Ansible variables in the filename
- name: Rename .bin file
  command: creates=/home/gpadmin/gpcc2-tmp-install/gpcc2.bin mv /home/gpadmin/gpcc2-tmp-install/greenplum-cc-web-{{ gpcc2_major_version }}.{{ gpcc2_minor_version }}-LINUX-x86_64/gpccinstall-{{ gpcc2_major_version }}.{{ gpcc2_minor_version }} /home/gpadmin/gpcc2-tmp-install/gpcc2.bin
  when: gpcc2_installed.stat.exists != True

- name: Copy Command Center setup config file
  copy: src=gpcc2_config.ini dest=/home/gpadmin/gpcc2_config.ini mode=0644 owner=gpadmin group=gpadmin
  when: gpcc2_installed.stat.exists != True

- name: Copy Command Center install script file
  copy: src=install_gpcc2.sh dest=/home/gpadmin/install_gpcc2.sh mode=0755 owner=gpadmin group=gpadmin
  when: gpcc2_installed.stat.exists != True

- name: Accept license and make unattended installation possible
  become_user: gpadmin
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && /home/gpadmin/install_gpcc2.sh )
  when: gpcc2_installed.stat.exists != True

- name: Create symlink to /usr/local/greenplum-cc-web
  file: src=/usr/local/greenplum-cc-web-{{ gpcc2_major_version }}.{{ gpcc2_minor_version }} dest=/usr/local/greenplum-cc-web state=link

- name: Remove temp installer directory
  file: path=/home/gpadmin/gpcc2-tmp-install state=absent
  changed_when: False
  when: gpcc2_installed.stat.exists != True

- name: Check again if the Command Center version is already installed
  stat: path=/usr/local/greenplum-cc-web-{{ gpcc2_major_version }}.{{ gpcc2_minor_version }}
  register: gpcc2_installed

- name: Stop if Command Center software is not installed
  fail: msg="Command Center software is not installed!"
  when: gpcc2_installed.stat.exists != True

# the gpcc_path.sh from the new installation does not have $GPPERFMONHOME
- name: Add GPPERFMONHOME to gpcc_path.sh
  lineinfile:
    dest: /usr/local/greenplum-cc-web-{{ gpcc2_major_version }}.{{ gpcc2_minor_version }}/gpcc_path.sh
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
    - { regexp: '^export GPPERFMONHOME=', line: 'export GPPERFMONHOME=/usr/local/greenplum-cc-web-{{ gpcc2_major_version }}.{{ gpcc2_minor_version }}', state: present }
  when: gpcc2_gpperfmon_install == True

- name: Shutdown database
  become_user: gpadmin
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && gpstop -a )
  when: gpcc2_gpperfmon_install == True
  async: 180
  poll: 5

- name: Start database
  become_user: gpadmin
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && gpstart -a )
  when: gpcc2_gpperfmon_install == True
  async: 180
  poll: 5

- name: Verify that gpperfmon is installed (1)
  become_user: gpadmin
  changed_when: False
  shell: ( . /usr/local/greenplum-db/greenplum_path.sh && psql -c "SELECT COUNT(*) AS count FROM pg_database WHERE datname = 'gpperfmon'" )
  register: select_gpperfmon

- name: Verify that gpperfmon is not installed (1)
  fail: msg="gpperfmon agents are not installed!"
  when: gpcc2_gpperfmon_install == True and select_gpperfmon.stdout.find('     1') == -1

- name: Verify that Command Center instance is installed (1)
  stat: path=/usr/local/greenplum-cc-web/instances/sne/
  register: gpcc2_sne_configured

- name: Verify that Command Center instance is installed (2)
  set_fact:
    gpcc2_setup_cc_sne: True
  when: gpcc2_sne_configured.stat.exists != True

- name: Start Command Center instance
  become_user: gpadmin
  changed_when: False
  shell: ( . /usr/local/greenplum-cc-web/gpcc_path.sh && gpcc start )
  when: gpcc2_setup_cc_sne == True
  # Instance name should be dealt with variable - Jomoon

- name: Command Center instance URL
  debug: msg="https://{{ inventory_hostname }}:28080/"
  when: gpcc2_setup_cc_sne == True
